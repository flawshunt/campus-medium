<% layout('layouts/boilerplate') %>

<div class="container py-5 mt-4">
  <div class="row">
    <div class="col-lg-8 mx-auto">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Create New Blog</h1>
      </div>

      <form id="createBlogForm" method="POST" action="/blog/create" enctype="multipart/form-data" novalidate>
        <!-- Title -->
        <div class="mb-4">
          <label for="title" class="form-label">Blog Title</label>
          <input 
            type="text" 
            class="form-control form-control-lg" 
            id="title" 
            name="title" 
            placeholder="Enter an engaging title..." 
            required 
            maxlength="200" 
            value="<%- typeof oldData !== 'undefined' ? oldData.title : '' %>"
          >
          <div class="form-text">
            <span id="titleCount">0</span>/200 characters
          </div>
          <div class="invalid-feedback">
            Please enter a blog title.
          </div>
        </div>

        <!-- Category -->
        <div class="mb-4">
          <label for="category" class="form-label">Category</label>
          <select class="form-select" id="category" name="category" required>
            <option value="">Select a category</option>
            <% const categories = ["Technology", "Lifestyle", "Travel", "Food", "Health", "Education"]; %>
            <% categories.forEach(cat => { %>
              <option value="<%= cat %>" <%= (typeof oldData !== 'undefined' && oldData.category === cat) ? 'selected' : '' %>><%= cat %></option>
            <% }) %>
          </select>
          <div class="invalid-feedback">
            Please select a category.
          </div>
        </div>

        <!-- Cover Image -->
        <div class="mb-4">
          <label for="coverImage" class="form-label">Cover Image (Optional)</label>
          <input type="file" class="form-control" id="coverImage" name="coverImage" accept="image/*" onchange="previewImage(this)">
          <div class="form-text">Recommended size: 1200x600px. Max file size: 5MB</div>
          <div id="imagePreview" class="mt-3 d-none">
            <img id="previewImg" src="/placeholder.svg" alt="Cover Preview" class="img-fluid rounded img-fluid fixed-blog-img " style="max-height: 300px;">
            <button type="button" class="btn btn-sm btn-outline-danger mt-2" onclick="removeImage()">
              <i class="fas fa-times me-1"></i>Remove Image
            </button>
          </div>
        </div>

        <!-- Content Preview -->
        <div class="mb-4">
          <label for="content" class="form-label">Full Blog Content</label>
          <textarea 
            class="form-control" 
            id="content" 
            name="content" 
            rows="15" 
            required
            placeholder="Write the full blog content here..."><%- typeof oldData !== 'undefined' ? oldData.content : '' %></textarea>
          <div class="invalid-feedback">
            Please provide the full blog content.
          </div>
        </div>

        <!-- Submit -->
        <div class="d-flex gap-3 justify-content-end">
          <a href="/home" class="btn btn-outline-secondary">
            <i class="fas fa-times me-1"></i>Cancel
          </a>
          <button type="submit" class="btn btn-primary btn-lg">
            <i class="fas fa-paper-plane me-1"></i>Publish Blog
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
  // Image preview and removal
  function previewImage(input) {
    const previewDiv = document.getElementById('imagePreview');
    const previewImg = document.getElementById('previewImg');
    if (input.files && input.files[0]) {
      const reader = new FileReader();
      reader.onload = function(e) {
        previewImg.src = e.target.result;
        previewDiv.classList.remove('d-none');
      };
      reader.readAsDataURL(input.files[0]);
    } else {
      previewImg.src = '/placeholder.svg';
      previewDiv.classList.add('d-none');
    }
  }

  function removeImage() {
    const fileInput = document.getElementById('coverImage');
    const previewDiv = document.getElementById('imagePreview');
    const previewImg = document.getElementById('previewImg');
    fileInput.value = '';
    previewImg.src = '/placeholder.svg';
    previewDiv.classList.add('d-none');
  }

  // Title character count
  const titleInput = document.getElementById('title');
  const titleCount = document.getElementById('titleCount');
  titleInput.addEventListener('input', () => {
    titleCount.textContent = titleInput.value.length;
  });
  titleCount.textContent = titleInput.value.length;
</script>
